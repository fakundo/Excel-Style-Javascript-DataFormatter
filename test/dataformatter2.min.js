DataFormatter = {functions: {}, locale: {months: ["января", "февраля", "марта", "апреля", "мая", "июня", "июля", "августа", "сентября", "октября", "ноября", "декабря"], months_short: ["янв", "фев", "мар", "апр", "май", "июн", "июл", "авг", "сен", "окт", "ноя", "дек"], days: ["воскресенье", "понедельник", "вторник", "среда", "четверг", "пятница", "суббота"], days_short: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"], thousands_separator: " ", decimal_separator: ",", formats: {"General Number": "#.#", Currency: "#,##0.00р.;[Red]-#,##0.00р.", Fixed: "0.00", Standard: "#,##0.00", Percent: "0.00%", Scientific: "0.00E+00", "Yes/No": '"Да";"Да";"Нет"', "True/False": '"Истина";"Истина";"Ложь"', "On/Off": '"Вкл";"Вкл";"Выкл"', "Short Date": "mm.dd.yyyy", "Long Date": "dd mmmm yyyy", "General Date": "mm.dd.yyyy h:mm", "Medium Date": "dd.mmm.yy", "Long Time": "hh:mm:ss AM/PM", "Short Time": "h:mm", "Medium Time": "hh:mm AM/PM"}}, fillNumberPattern: function (n, e, t) {
	n = n.toString();
	var r, a, m = "";
	if ("right" == t)for (a = 0, r = 0; r < e.length; r++)switch (e[r]) {
		case"0":
			m += n[a] ? n[a] : "0", a++;
			break;
		case"#":
			m += n[a] ? n[a] : "", a++;
			break;
		case"?":
			m += n[a] ? n[a] : " ", a++;
			break;
		case"[":
			for (; r < e.length && "]" != e[r];)m += e[r], r++;
			r--;
			break;
		default:
			m += e[r]
	} else {
		var s, i;
		if (e = e.replace(/(0|#|\?)(,+?)(0|#|\?)/g, function (n, e, t, r) {
			return i = !0, e + r
		}), i)for (a = n.length - 3; "-" == n[0] ? a > 1 : a > 0; a -= 3)n = n.substr(0, a) + DataFormatter.locale.thousands_separator + n.substr(a);
		for (a = n.length - 1, r = e.length - 1; r >= 0; r--)switch (e[r]) {
			case"0":
				m = (n[a] ? n[a] : "0") + m, s = r, a--;
				break;
			case"#":
				m = (n[a] ? n[a] : "") + m, s = r, a--;
				break;
			case"?":
				m = (n[a] ? n[a] : " ") + m, s = r, a--;
				break;
			case"]":
				for (; r > 0 && "[" != e[r];)m = e[r] + m, r--;
				r++;
				break;
			default:
				m = e[r] + m
		}
		a >= 0 && null != s && (m = m.substr(0, s) + n.substr(0, a + 1) + m.substr(s))
	}
	return m
}, makeReplaces: function (n, e) {
	return n.replace(/\[(?:(\$*)|(.*))]/g, function (n, t) {
		return t && e[t.length] ? e[t.length] : ""
	})
}, format: function (n, e, t) {
	if (t = t.toString(), DataFormatter.functions[t])return DataFormatter.functions[t](n, e);
	var r, a, m, s, i, o, u, l = "", f = "", h = "";
	if ("General" == t)l += 'var res = {value:n};\nif (type == "Number"){\nif (!isNaN(n) && n!=""){\nif (n<1e21 && n>-1e21){\nres.align="right";\nn=parseFloat(n);\nres.value=n;\nif (n != parseInt(n / 1)) {\nres.value = (Math.round(n*100)/100).toString().replace(/\\./,"' + DataFormatter.locale.decimal_separator + '");\n}\n}\nelse {\nres.value=n.toString().toUpperCase();\n}\n}\n}\nelse if(type == "DateTime" && !isNaN((new Date(n)).getTime())){\nres.align="right";\nres.value = Math.abs((new Date(n)).getTime()-(new Date("1899-12-31T00:00:00.000")).getTime())/1000/60/60/24;\n}\nreturn res;'; else {
		for (u = t, DataFormatter.locale.formats[u] && (u = DataFormatter.locale.formats[u]), u = u.replace(/"([^"]+)"|\\(.?)|(_.?)|(\*.?)|(")/g, function (n, e, t, r) {
			return e ? (h += ',"' + e.replace(/("|'|\\)/g, "\\$1") + '"', "[" + (f += "$") + "]") : t ? (h += ',"' + t.replace(/("|'|\\)/g, "\\$1") + '"', "[" + (f += "$") + "]") : r ? (h += '," "', "[" + (f += "$") + "]") : ""
		}), u = u.split(/;/), a = Math.min(4, u.length), r = 0; a > r; r++) {
			if (i = "", o = !1, i = u[r].match(/\[((?:>|>=|<|<=|=|<>)[0-9\.]+?)]/), i ? i = 'type=="Number" && n' + i[1].replace(/<>/, "!=").replace(/=/, "==") : 0 == r && u.length > 2 ? i = 'type=="Number" && n>0' : 0 == r && u.length > 1 ? i = 'type=="Number" && n>=0' : 1 == r && u.length > 1 ? (i = 'type=="Number" && n<0', o = !0) : 2 == r && u.length > 3 && (i = 'type=="Number"'), m = 'var res={value:"' + u[r] + '"}, repl=[' + h + "];\n", (s = u[r].match(/\[(Red|Green|White|Blue|Magenta|Yellow|Cyan|Black)]/i)) && (m += 'res.color="' + s[1] + '";\n'), u[r] = u[r].replace(/(\[((?!((\$*?)|(h*?)|(m*?)|(s*?))]).*?)])/, ""), u[r].match(/@/))m += 'res.value="' + u[r] + '".replace(/@/,n);\n'; else if (u[r].match(/#|\?|0/)) {
				var c = 'n=parseFloat(n);\nres.align="right";\n';
				if (o && (c += "n=Math.abs(n);\n"), s = u[r].match(/(.*?)(?:(\.)(.*?))?e(?:\+|\-)(.*)/i)) {
					var g, p;
					s[1] ? g = Math.pow(10, s[1].match(/0|\?|#/g).length) : (s[1] = "#", g = 10), s[3] ? p = Math.pow(10, s[3].match(/0|\?|#/g).length) : (s[3] = "", p = 1), s[4] || (s[4] = ""), c += "var m=0,sign=n<0?-1:1;\nn=Math.abs(n);\nif(n!=0){\nwhile(n<" + g + " || Math.round(n*" + p + ")/" + p + "<" + g + "){\nn*=10;\nm++;\n}\nwhile(n>=" + g + " || Math.round(n*" + p + ")/" + p + ">=" + g + "){\nn/=10;\nm--;\n}\n}\nn=(Math.round(n*sign*" + p + ")/" + p + ').toString().split(".");\nres.value=DataFormatter.fillNumberPattern(parseInt(n[0]),"' + s[1] + '")+', s[2] && (c += '"' + DataFormatter.locale.decimal_separator + '"+', s[3] && (c += 'DataFormatter.fillNumberPattern(parseInt(n[1]),"' + s[3] + '","right")+')), c += '"E"+(m>0?"-":"+")+DataFormatter.fillNumberPattern(Math.abs(m),"' + s[4] + '");\n'
				} else {
					var d = 1;
					if (u[r] = u[r].replace(/(0|#|\?)(\s+)([^0?#]*)$/, function (n, e, t, r) {
						return d *= Math.pow(1e3, t.length), e + r
					}), (s = u[r].match(/%/g)) && (d /= Math.pow(100, s.length)), s = u[r].match(/(.*?)\/(.*)/)) {
						s[1] || (s[1] = "#"), s[2] || (s[2] = "#");
						for (var y = s[1].length - 1; "0" == s[1][y] && "?" != s[1][y] && "#" != s[1][y] && " " != s[1][y] && y > 0;)y--;
						s[3] = s[1].substr(0, y), s[4] = s[1].substr(y), c += s[3] ? 'var f=0, factor=1, c=1, m=n.toString().split(".");\nif (m[1]) { c=Math.pow(10,m[1].length); f=parseInt(m[1]); factor=DataFormatter.gcd(f,c); }\nres.value=DataFormatter.fillNumberPattern(Math.floor(n),"' + s[3] + '")+DataFormatter.fillNumberPattern(f/factor,"' + s[4] + '")+"/"+DataFormatter.fillNumberPattern(c/factor,"' + s[2] + '");\n' : 'var m=n.toString().split("."); m=m[1]?Math.pow(10,m[1].length):1;\nn=Math.floor(n*m);var factor=DataFormatter.gcd(n,m);\nres.value=DataFormatter.fillNumberPattern(n/factor,"' + s[4] + '")+"/"+DataFormatter.fillNumberPattern(m/factor,"' + s[2] + '");\n'
					} else(s = u[r].match(/(.*?)\.(.*)/)) ? (s[1] || (s[1] = "0"), s[2] ? p = Math.pow(10, s[2].match(/0|\?|#/g).length) : (s[2] = "", p = 1), s[1] = s[1].replace(/(0|#|\?)(\s+)([^0?#]*)$/, function (n, e, t, r) {
						return d *= Math.pow(1e3, t.length), e + r
					}), c += "n=(Math.round(n*" + p + ")/" + p + ').toString().split(".");\nres.value=DataFormatter.fillNumberPattern(parseInt(n[0]),"' + s[1] + '")+"' + DataFormatter.locale.decimal_separator + '"+DataFormatter.fillNumberPattern(parseInt(n[1]||0),"' + s[2] + '","right");\n') : c += 'res.value=DataFormatter.fillNumberPattern(parseInt(n),"' + u[r] + '");\n';
					1 != d && (c = "n/=" + d + ";\n" + c)
				}
				c = "if(n<1e21 && n>-1e21){\n" + c + "}\nelse{\nres.value=n.toString().toUpperCase();\n}\n", i || (i = 'type=="Number"'), m += c
			} else if (u[r].match(/d|m|y|h|s/i)) {
				var D = !1;
				u[r] = u[r].replace(/\[(h+?|m+?|s+?|y+?)]/gi, function (n, e) {
					return D = !0, e
				}), m += 'if(type=="DateTime"){\n', m += "n=new Date(n);\n", m += "if (!isNaN(n.getTime())){\n", m += 'res.align="right";\n', D ? (m += 'var m, found_hours, found_minutes;\nn=Math.abs(n.getTime()-(new Date("1899-12-31T00:00:00.000")).getTime());\n', u[r] = u[r].replace(/a|p|am|pm|mmm|mmmm|mmmmm|d|y/gi, ""), u[r].match(/h/i) && (m += "found_hours=true;\n"), u[r].match(/m/i) && (m += "found_minutes=true;\n"), m += 'res.value="' + u[r] + '".replace(/(hh)|(h)|(mm)|(m)|(ss)|(s)/gi,function(a,hh,h,mm,m,ss,s){\nif (hh) { return (m=parseInt(n/1000/60/60))<10 ? "0"+m : m; }\nif (h) return parseInt(n/1000/60/60);\nif (mm) { m=found_hours ? parseInt(n/1000/60%60) : parseInt(n/1000/60) ;  return m<10 ? "0"+m : m; }\nif (m) { m=found_hours ? parseInt(n/1000/60%60) : parseInt(n/1000/60) ;  return m; }\nif (ss) { m=found_minutes ? parseInt(n/1000%60) : parseInt(n/1000) ;  return m<10 ? "0"+m : m; }\nif (s) { m=found_minutes ? parseInt(n/1000%60) : parseInt(n/1000) ;  return m; }\nreturn "";\n});\n') : (m += "var found_ampm;\n", m += 'res.value="' + u[r] + '".replace(/((?:am\\/pm)|(?:a\\/p))|(?:(h[^ydsap]*?)mm)|(?:mm([^ydh]*?s))|(?:(h[^ydsap]*?)m)|(?:m([^ydh]*?s))/gi,function(a,ampm,fmin,fmin2,mmin,mmin2){\nif (ampm) { found_ampm=true; return "[]"; }\nif (fmin) { m=n.getMinutes(); return fmin + (m<10 ? "0" + m : m); }\nif (fmin2) { m=n.getMinutes(); return (m<10 ? "0" + m : m) + fmin2; }\nif (mmin) { return mmin + n.getMinutes(); }\nif (mmin2) { return n.getMinutes() + mmin2; }\nreturn "";\n});\n', m += 'res.value=res.value.replace(/(ss)|(s)|(hh)|(h)|(dddd)|(ddd)|(dd)|(d)|(mmmmm)|(mmmm)|(mmm)|(mm)|(m)|(yyyy)|(yy)|(\\[])/gi,function(a,ss,s,hh,h,dddd,ddd,dd,d,mmmmm,mmmm,mmm,mm,m,yyyy,yy,ampm){\nif (ss) { m=n.getSeconds(); return m<10 ? "0" + m : m; }\nif (s) { return n.getSeconds(); }\nif (hh) { m=n.getHours(); if (found_ampm) m=m%12; return m<10 ? "0" + m : m; }\nif (h) { return n.getHours(); if (found_ampm) m=m%12; }\nif (hh) { m=n.getHours(); return m<10 ? "0" + m : m; }\nif (dddd) { return DataFormatter.locale.days[n.getDay()]; }\nif (ddd) { return DataFormatter.locale.days_short[n.getDay()]; }\nif (dd) { m=n.getDate(); return m<10 ? "0" + m : m; }\nif (d) { return n.getDate(); }\nif (mmmmm) return DataFormatter.locale.months_short[n.getMonth()][0];\nif (mmmm) return DataFormatter.locale.months[n.getMonth()];\nif (mmm) return DataFormatter.locale.months_short[n.getMonth()];\nif (mm) { m=n.getMonth()+1; return m<10 ? "0" + m : m; }\nif (m) { return n.getMonth()+1; }\nif (yyyy) return n.getFullYear();\nif (yy) return n.getFullYear().toString().substr(2);\nif (ampm) return n.getHours()<12 ? "AM" : "PM";\nreturn "";\n});\n'), m += "\n}}\n"
			}
			m += "res.value=DataFormatter.makeReplaces(res.value,repl);\n", m += "return res;\n", l += i ? "if(" + i + "){\n" + m + "}\n\n" : m
		}
		l += "return {value:n};\n"
	}
	return(DataFormatter.functions[t] = Function("n,type", l))(n, e)
}, gcd: function (n, e) {
	for (var t; e;)t = n % e, n = e, e = t;
	return n
}};
//# sourceMappingURL=dataformatter2.min.map